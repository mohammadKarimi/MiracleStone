// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
#pragma warning disable 1591, 3008, 3009
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace MiracleStone.Web.Controllers
{
    public partial class DashboardController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DashboardController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DashboardController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AnswerContact()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AnswerContact);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DashboardController Actions { get { return MVC.Dashboard; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Dashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Dashboard";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string SignIn = "SignIn";
            public readonly string ContactUs = "ContactUs";
            public readonly string AnswerContact = "AnswerContact";
            public readonly string CompanyInfo = "CompanyInfo";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string SignIn = "SignIn";
            public const string ContactUs = "ContactUs";
            public const string AnswerContact = "AnswerContact";
            public const string CompanyInfo = "CompanyInfo";
        }


        static readonly ActionParamsClass_SignIn s_params_SignIn = new ActionParamsClass_SignIn();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SignIn SignInParams { get { return s_params_SignIn; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SignIn
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_AnswerContact s_params_AnswerContact = new ActionParamsClass_AnswerContact();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AnswerContact AnswerContactParams { get { return s_params_AnswerContact; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AnswerContact
        {
            public readonly string tblContactID = "tblContactID";
            public readonly string ins = "ins";
        }
        static readonly ActionParamsClass_CompanyInfo s_params_CompanyInfo = new ActionParamsClass_CompanyInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CompanyInfo CompanyInfoParams { get { return s_params_CompanyInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CompanyInfo
        {
            public readonly string model = "model";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string AnswerContact = "AnswerContact";
                public readonly string CompanyInfo = "CompanyInfo";
                public readonly string ContactUs = "ContactUs";
                public readonly string SignIn = "SignIn";
            }
            public readonly string AnswerContact = "~/Views/Dashboard/AnswerContact.cshtml";
            public readonly string CompanyInfo = "~/Views/Dashboard/CompanyInfo.cshtml";
            public readonly string ContactUs = "~/Views/Dashboard/ContactUs.cshtml";
            public readonly string SignIn = "~/Views/Dashboard/SignIn.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DashboardController : MiracleStone.Web.Controllers.DashboardController
    {
        public T4MVC_DashboardController() : base(Dummy.Instance) { }

        [NonAction]
        partial void SignInOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult SignIn()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.SignIn);
            SignInOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void SignInOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MiracleStone.Domain.Entity.TblUser model);

        [NonAction]
        public override System.Web.Mvc.ActionResult SignIn(MiracleStone.Domain.Entity.TblUser model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SignIn);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SignInOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ContactUsOverride(T4MVC_System_Web_Mvc_ViewResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ViewResult ContactUs()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ViewResult(Area, Name, ActionNames.ContactUs);
            ContactUsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AnswerContactOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int tblContactID);

        [NonAction]
        public override System.Web.Mvc.ActionResult AnswerContact(int tblContactID)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AnswerContact);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "tblContactID", tblContactID);
            AnswerContactOverride(callInfo, tblContactID);
            return callInfo;
        }

        [NonAction]
        partial void AnswerContactOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MiracleStone.Domain.Entity.TblContactUs ins);

        [NonAction]
        public override System.Web.Mvc.ActionResult AnswerContact(MiracleStone.Domain.Entity.TblContactUs ins)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AnswerContact);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "ins", ins);
            AnswerContactOverride(callInfo, ins);
            return callInfo;
        }

        [NonAction]
        partial void CompanyInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CompanyInfo()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompanyInfo);
            CompanyInfoOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CompanyInfoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, MiracleStone.Domain.Entity.TblCompanyInfo model);

        [NonAction]
        public override System.Web.Mvc.ActionResult CompanyInfo(MiracleStone.Domain.Entity.TblCompanyInfo model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CompanyInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            CompanyInfoOverride(callInfo, model);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009
